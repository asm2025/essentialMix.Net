<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="clr-namespace:essentialMix.WPF.Controls"
	xmlns:converters="clr-namespace:essentialMix.WPF.Converters"
	xmlns:helpers="clr-namespace:essentialMix.Windows.Helpers;assembly=essentialMix.Windows">
	<!--  Converters  -->
	<BorderGapMaskConverter x:Key="BorderGapMaskConverter" />
	<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
	<converters:AndBooleanConverter x:Key="AndBooleanConverter" />
	<converters:AndBooleanToVisibilityConverter x:Key="AndBooleanToVisibilityConverter" />
	<converters:InverseAndBooleanConverter x:Key="InverseAndBooleanConverter" />
	<converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
	<converters:InverseAndBooleanToVisibilityConverter x:Key="InverseAndBooleanToVisibilityConverter" />
	<converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
	<converters:InverseOrBooleanConverter x:Key="InverseOrBooleanConverter" />
	<converters:InverseOrBooleanToVisibilityConverter x:Key="InverseOrBooleanToVisibilityConverter" />
	<converters:NumberToHeaderSizeConverter x:Key="NumberToHeaderSizeConverter" />
	<converters:OrBooleanConverter x:Key="OrBooleanConverter" />
	<converters:OrBooleanToVisibilityConverter x:Key="OrBooleanToVisibilityConverter" />
	<!--  Label  -->
	<Style TargetType="Label">
		<Setter Property="VerticalAlignment" Value="Center" />
	</Style>
	<!--  TextBlock  -->
	<Style TargetType="TextBlock">
		<Setter Property="VerticalAlignment" Value="Center" />
	</Style>
	<!--  TextBox  -->
	<Style TargetType="TextBox">
		<Setter Property="Height" Value="Auto" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="VerticalAlignment" Value="Center" />
	</Style>
	<!--  Button  -->
	<Style TargetType="Button">
		<Setter Property="Width" Value="Auto" />
		<Setter Property="Height" Value="Auto" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="VerticalAlignment" Value="Center" />
	</Style>
	<!--  FormControlItem  -->
	<Style TargetType="controls:FormControlItem">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="controls:FormControlItem">
					<Border
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" SharedSizeGroup="Label" />
								<ColumnDefinition />
							</Grid.ColumnDefinitions>
							<ContentPresenter ContentSource="Label" />
							<ContentPresenter Grid.Column="1" ContentSource="Content" />
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--  SelectFolder  -->
	<Style TargetType="controls:SelectFolder">
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush2}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:SelectFolder}">
					<Grid Margin="0">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Border
							HorizontalAlignment="Stretch"
							VerticalAlignment="Stretch"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							SnapsToDevicePixels="True">
							<controls:SelectableTextBlock
								x:Name="PART_TextBlock"
								Padding="4"
								HorizontalAlignment="Stretch"
								VerticalAlignment="Center"
								Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedPath}" />
						</Border>
						<Button
							x:Name="PART_Button"
							Grid.Column="1"
							Margin="2,0,0,0"
							Command="{TemplateBinding BrowseCommand}"
							CommandParameter="{Binding}"
							Content="..."
							Visibility="{TemplateBinding IsReadOnly,
							                             Converter={StaticResource InverseBooleanToVisibilityConverter}}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--  SlidingContent  -->
	<Style TargetType="controls:SlidingContent">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:SlidingContent}">
					<Grid>
						<ContentPresenter x:Name="PART_Content" Content="{TemplateBinding Content}" />
						<Rectangle
							x:Name="PART_PaintArea"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Stretch" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--  UACShieldButton  -->
	<ControlTemplate x:Key="UACShieldButton" TargetType="{x:Type controls:UACShieldButton}">
		<Border
			Padding="{TemplateBinding Padding}"
			Background="{TemplateBinding Background}"
			BorderBrush="{TemplateBinding BorderBrush}"
			BorderThickness="{TemplateBinding BorderThickness}"
			SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition />
				</Grid.ColumnDefinitions>
				<Image
					x:Name="PART_Image"
					Margin="4,0"
					HorizontalAlignment="Left"
					VerticalAlignment="Center"
					Source="{TemplateBinding Icon}"
					Stretch="None">
					<Image.Visibility>
						<MultiBinding Converter="{StaticResource AndBooleanToVisibilityConverter}">
							<Binding Path="IconRequested" RelativeSource="{RelativeSource TemplatedParent}" />
							<Binding Converter="{StaticResource InverseBooleanConverter}" Source="{x:Static helpers:WindowsIdentityHelper.HasElevatedPrivileges}" />
						</MultiBinding>
					</Image.Visibility>
				</Image>
				<ContentControl
					x:Name="PART_ContentPresenter"
					Grid.Column="1"
					HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
					VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
					Content="{TemplateBinding Content}"
					ContentStringFormat="{TemplateBinding ContentStringFormat}"
					ContentTemplate="{TemplateBinding ContentTemplate}"
					ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
					SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
			</Grid>
		</Border>
	</ControlTemplate>
</ResourceDictionary>